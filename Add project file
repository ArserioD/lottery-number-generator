{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "bb0dad52",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Enter 6 unique numbers between 1 and 49 separated by spaces: 4 45 23 22 21 20\n",
      "\n",
      "Your numbers:       [4, 20, 21, 22, 23, 45]\n",
      "Lottery numbers:    [1, 7, 16, 25, 26, 40]\n",
      "Matching numbers:   []\n",
      "Number of matches: 0\n",
      "No prize. Better luck next time!\n"
     ]
    }
   ],
   "source": [
    "import random\n",
    "\n",
    "def generate_lottery_numbers():\n",
    "    \"\"\"\n",
    "    Generates a set of 6 unique random numbers in the range 1 to 49.\n",
    "    \"\"\"\n",
    "    return set(random.sample(range(1, 50), 6))\n",
    "\n",
    "def determine_winnings(match_count):\n",
    "    \"\"\"\n",
    "    Determines winnings based on the number of matching numbers.\n",
    "    \"\"\"\n",
    "    prizes = {\n",
    "        6: \"Jackpot! You win 1,000,000 dollars!\",\n",
    "        5: \"Great! You win $10,000!\",\n",
    "        4: \"Good job! You win $1,000!\",\n",
    "        3: \"Not bad! You win $100!\",\n",
    "    }\n",
    "    # For 0, 1, 2 matches, or any other case not listed, the user wins nothing.\n",
    "    return prizes.get(match_count, \"No prize. Better luck next time!\")\n",
    "\n",
    "def lottery_game(user_numbers):\n",
    "    \"\"\"\n",
    "    Compares the user's chosen numbers with the randomly generated lottery numbers.\n",
    "    Utilizes set intersection to determine matching numbers and calculates winnings.\n",
    "    \"\"\"\n",
    "    lottery_numbers = generate_lottery_numbers()\n",
    "    matches = user_numbers.intersection(lottery_numbers)\n",
    "    match_count = len(matches)\n",
    "    winnings = determine_winnings(match_count)\n",
    "    return lottery_numbers, matches, match_count, winnings\n",
    "\n",
    "# --- Main code execution ---\n",
    "# This block lets the user input 6 unique numbers between 1 and 49.\n",
    "while True:\n",
    "    try:\n",
    "        user_input = input(\"Enter 6 unique numbers between 1 and 49 separated by spaces: \")\n",
    "        # Convert input string to a set of integers\n",
    "        user_numbers = set(map(int, user_input.split()))\n",
    "        if len(user_numbers) != 6:\n",
    "            raise ValueError(\"You must enter exactly 6 unique numbers.\")\n",
    "        if not all(1 <= num <= 49 for num in user_numbers):\n",
    "            raise ValueError(\"All numbers must be between 1 and 49.\")\n",
    "        break\n",
    "    except ValueError as e:\n",
    "        print(\"Error:\", e)\n",
    "        print(\"Please try again.\\n\")\n",
    "\n",
    "# Run the lottery game\n",
    "lottery_numbers, matches, match_count, winnings = lottery_game(user_numbers)\n",
    "\n",
    "# Display the results\n",
    "print(\"\\nYour numbers:      \", sorted(user_numbers))\n",
    "print(\"Lottery numbers:   \", sorted(lottery_numbers))\n",
    "print(\"Matching numbers:  \", sorted(matches))\n",
    "print(f\"Number of matches: {match_count}\")\n",
    "print(winnings)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "409063f7",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
